{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luvmo\\\\ReactWorkSpace\\\\ead-class\\\\login-with-reducer\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Login from \"./component/Login\";\nimport NavBar from \"./component/NavBar\";\nimport AuthContext from \"./Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  function reducer(state, action) {\n    switch (action.type) {\n      case \"login\":\n        const {\n          username,\n          password\n        } = action.payload;\n        return login(username, password);\n\n      case \"logout\":\n        return {\n          loggedIn: false\n        };\n\n      default:\n        throw new Error(\"invalid action type\");\n    }\n  }\n\n  const [state, dispatch] = useReducer(reducer, {\n    loggedIn: false\n  });\n\n  function login(username, password) {\n    if (username == \"admin\" && password == \"admin\") {\n      return {\n        loggedIn: true\n      };\n    }\n\n    return {\n      loggedIn: false,\n      error: \"Invalid Credentials\"\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        state,\n        dispatch\n      },\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"AdPA4QNwb3YSkJtSwEpYQXSHb88=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/luvmo/ReactWorkSpace/ead-class/login-with-reducer/src/App.js"],"names":["React","useReducer","Login","NavBar","AuthContext","App","reducer","state","action","type","username","password","payload","login","loggedIn","Error","dispatch","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAO,WAAP;AAEA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,WAAP,MAAwB,WAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,WAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,YAAQA,MAAM,CAACC,IAAf;AACE,WAAK,OAAL;AACE,cAAM;AAAEC,UAAAA,QAAF;AAAYC,UAAAA;AAAZ,YAAyBH,MAAM,CAACI,OAAtC;AACA,eAAOC,KAAK,CAACH,QAAD,EAAWC,QAAX,CAAZ;;AACF,WAAK,QAAL;AACE,eAAO;AACLG,UAAAA,QAAQ,EAAE;AADL,SAAP;;AAIF;AACE,cAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;AAVJ;AAYD;;AAED,QAAM,CAACR,KAAD,EAAQS,QAAR,IAAoBf,UAAU,CAACK,OAAD,EAAU;AAAEQ,IAAAA,QAAQ,EAAE;AAAZ,GAAV,CAApC;;AAEA,WAASD,KAAT,CAAeH,QAAf,EAAyBC,QAAzB,EAAmC;AACjC,QAAID,QAAQ,IAAI,OAAZ,IAAuBC,QAAQ,IAAI,OAAvC,EAAgD;AAC9C,aAAO;AACLG,QAAAA,QAAQ,EAAE;AADL,OAAP;AAGD;;AACD,WAAO;AACLA,MAAAA,QAAQ,EAAE,KADL;AAELG,MAAAA,KAAK,EAAE;AAFF,KAAP;AAID;;AACD,sBACE;AAAA,2BACE,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAEV,QAAAA,KAAF;AAASS,QAAAA;AAAT,OAA7B;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA,+BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAvCQX,G;;KAAAA,G;AAyCT,eAAeA,GAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Login from \"./component/Login\";\r\nimport NavBar from \"./component/NavBar\";\r\nimport AuthContext from \"./Context\";\r\n\r\nfunction App() {\r\n  function reducer(state, action) {\r\n    switch (action.type) {\r\n      case \"login\":\r\n        const { username, password } = action.payload;\r\n        return login(username, password);\r\n      case \"logout\":\r\n        return {\r\n          loggedIn: false,\r\n        };\r\n\r\n      default:\r\n        throw new Error(\"invalid action type\");\r\n    }\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(reducer, { loggedIn: false });\r\n\r\n  function login(username, password) {\r\n    if (username == \"admin\" && password == \"admin\") {\r\n      return {\r\n        loggedIn: true,\r\n      };\r\n    }\r\n    return {\r\n      loggedIn: false,\r\n      error: \"Invalid Credentials\",\r\n    };\r\n  }\r\n  return (\r\n    <div>\r\n      <AuthContext.Provider value={{ state, dispatch }}>\r\n        <NavBar />\r\n        <div className=\"d-flex justify-content-center\">\r\n          <Login />\r\n        </div>\r\n      </AuthContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}